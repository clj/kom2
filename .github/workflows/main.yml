name: Go package

on: [push]

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            output: kom2-linux-amd64.so
          - os: macos-latest
            output: kom2-macos-arm64.dylib
            env: CGO_ENABLED=1 GOARCH=arm64
            arch: arm64
          - os: macos-latest
            output: kom2-macos-amd64.dylib
            env: CGO_ENABLED=1 GOARCH=amd64
            arch: amd64
          - os: windows-latest
            output: kom2-windows-amd64.dll
            env: CGO_LDFLAGS=-lodbc32

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20.x'

      - name: Install dependencies
        run: |
          go get .

      - name: Get build date
        run: |
          echo "timestamp=$(date -Iseconds)" >> "$GITHUB_ENV"

      - name: Get release tag name
        run: |
          echo "release_name=$(echo ${{ github.ref_name }} | cut -d- -f2)" >> "$GITHUB_ENV"
        if: startsWith(github.ref_name, 'release-')

      - name: Install arm64 unixodbc for macOS arm64 build
        if: matrix.os == 'macos-latest' && matrix.arch == 'arm64'
        run: |
          brew fetch --force --bottle-tag=arm64_monterey unixodbc
          HOMEBREW_NO_INSTALL_CLEANUP=1 brew reinstall $(brew --cache --bottle-tag=arm64_monterey unixodbc)

      - run: find C:/ProgramData/Chocolatey/lib/mingw -name *odbc32*
        if: matrix.os == 'windows-latest'

      - name: Build
        run: ${{ matrix.env }} ./build.sh -o ${{ matrix.output }} -tags odbcinst -x -ldflags "-s -w -X main.Version=${{ env.release_name }} -X main.BuildDate=${{ env.timestamp }} -X main.Commit=${{ github.sha }}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: |
            *.dll
            *.so
            *.dylib
        if: startsWith(github.ref_name, 'release-')

  release:
    needs: build

    runs-on: ubuntu-latest

    if: startsWith(github.ref_name, 'release-')

    steps:
      - uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3

      - name: Get release tag name
        run: |
          echo "release_name=$(echo ${{ github.ref_name }} | cut -d- -f2)" >> "$GITHUB_ENV"

      - name: Package
        run: ./package.sh artifact/ ${{ env.release_name }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: ${{ github.workspace }}/release-notes/${{ env.release_name }}.md
          files:
            artifact/kicad-odbc-middleware2-*.zip
          fail_on_unmatched_files: true
