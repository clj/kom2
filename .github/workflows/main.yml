name: Go package

on: [push]

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v3

      # - name: Install apt dependencies
      #   run: |
      #     sudo apt install -y unixodbc-dev

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20.x'

      - name: Install dependencies
        run: |
          go get .

      # - name: Copy unixodbc include files
      #   run: |
      #     mkdir $GITHUB_WORKSPACE/include
      #     cp /usr/include/odbcinst.h $GITHUB_WORKSPACE/include
      #     cp /usr/include/odbcinstext.h $GITHUB_WORKSPACE/include
      #     cp /usr/include/sql.h $GITHUB_WORKSPACE/include
      #     cp /usr/include/sqlext.h $GITHUB_WORKSPACE/include
      #     cp /usr/include/sqlspi.h $GITHUB_WORKSPACE/include
      #     cp /usr/include/sqltypes.h $GITHUB_WORKSPACE/include
      #     cp /usr/include/sqlucode.h $GITHUB_WORKSPACE/include
      #     cp /usr/include/uodbc_extras.h $GITHUB_WORKSPACE/include
      #     cp /usr/include/uodbc_stats.h $GITHUB_WORKSPACE/include

      # - name: Test
      #   run: ./test.sh

      - name: Get build date
        run: |
          echo "timestamp=$(date -Iseconds)" >> "$GITHUB_ENV"

      - name: Get release tag name
        run: |
          echo "release_name=$(echo ${{ github.ref_name }} | cut -d- -f2)" >> "$GITHUB_ENV"
        if: startsWith(github.ref_name, 'release-')

      - name: cat
        run: cat c:/programdata/chocolatey/lib/mingw/tools/install/mingw64/x86_64-w64-mingw32/include/sqltypes.h
        if: matrix.os == 'windows-latest'

      - name: Build
        run: ./build.sh

      - name: ls
        run: ls -lR

      # - uses: actions/checkout@v3
      #   with:
      #     repository: clj/ghaction-xgo
      #     path: ghaction-xgo
      #     ref: updates

      # - name: Build
      #   uses: ./ghaction-xgo
      #   with:
      #     xgo_version: latest
      #     go_version: 1.20.3
      #     dest: build
      #     prefix: kom2
      #     targets: darwin/amd64,darwin/arm64,linux/amd64,linux/arm64,windows/amd64
      #     v: true
      #     x: false
      #     race: false
      #     ldflags: -s -w -X main.Version=${{ env.release_name }} -X main.BuildDate=${{ env.timestamp }} -X main.Commit=${{ github.sha }}
      #     buildmode: c-shared
      #     trimpath: true
      #     tags: xgo

      # - name: Package
      #   run: ./package.sh build/ ${{ env.release_name }}
      #   if: startsWith(github.ref_name, 'release-')

      # - name: Release
      #   uses: softprops/action-gh-release@v1
      #   if: startsWith(github.ref_name, 'release-')
      #   with:
      #     body_path: ${{ github.workspace }}/release-notes/${{ env.release_name }}.md
      #     files:
      #       build/kicad-odbc-middleware2-*.zip
      #     fail_on_unmatched_files: true
